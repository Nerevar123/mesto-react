{"version":3,"sources":["components/Header.js","components/Card.js","utils/api.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js","images/header-logo.svg"],"names":["Header","className","src","logo","alt","Card","props","onClick","onCardClick","card","link","name","type","likes","length","api","baseUrl","headers","this","_baseUrl","_headers","res","ok","json","Promise","reject","status","fetch","then","_checkError","info","method","body","JSON","stringify","id","avatar","authorization","Main","React","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setInitialCards","useEffect","all","getInitCards","getUserInfo","data","userId","_id","about","catch","err","console","log","onEditAvatar","onEditProfile","onAddPlace","map","key","Footer","PopupWithForm","isOpen","title","action","noValidate","children","onClose","ImagePopup","App","isEditProfilePopupOpen","setEditProfileClick","isAddPlacePopupOpen","setAddPlaceClick","isEditAvatarPopupOpen","setEditAvatarClick","selectedCard","setSelectedCard","closeAllPopups","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.be5507a7.chunk.js","sourcesContent":["import React from 'react';\nimport logo from '../images/header-logo.svg';\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <img src={logo} alt=\"Mesto логотип\" className=\"header__logo\" />\n    </header>\n  )\n}\n\nexport default Header;\n","import React from 'react';\n\nfunction Card(props) {\n  function handleClick() {\n    props.onCardClick(props.card);\n  };\n\n  return (\n    <li className=\"place\">\n      <div className=\"place__img-wrapper\" onClick={handleClick}>\n        <img src={props.card.link} alt={props.card.name} className=\"place__image\" />\n      </div>\n      <div className=\"place__header\">\n        <h3 className=\"place__title\">{props.card.name}</h3>\n        <div className=\"place__like\">\n          <button className=\"place__like-btn button\" type=\"button\"></button>\n          <span className=\"place__like-count\">{props.card.likes.length}</span>\n        </div>\n      </div>\n      <button className=\"place__delete-btn button\" type=\"button\"></button>\n    </li>\n  );\n}\n\nexport default Card;\n","export default class Api {\n  constructor({ baseUrl, headers }) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  _checkError(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Error: ${res.status}`)\n  }\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n      })\n      .then(this._checkError);\n  }\n\n  getInitCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n      })\n      .then(this._checkError);\n  }\n\n  patchUserInfo(info) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify(info)\n    })\n    .then(this._checkError);\n  }\n\n  addCard(card) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify(card)\n    })\n    .then(this._checkError);\n  }\n\n  deleteCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    })\n    .then(this._checkError);\n  }\n\n  putLike(id) {\n    return fetch(`${this._baseUrl}/cards/likes/${id}`, {\n      method: \"PUT\",\n      headers: this._headers\n      })\n      .then(this._checkError);\n  }\n\n  deleteLike(id) {\n    return fetch(`${this._baseUrl}/cards/likes/${id}`, {\n      method: \"DELETE\",\n      headers: this._headers\n      })\n      .then(this._checkError);\n  }\n\n  patchAvatar(avatar) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify(avatar)\n    })\n    .then(this._checkError);\n  }\n}\n\nexport const api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-15',\n  headers: {\n    authorization: '793e9e42-5ad3-4803-88e8-acbb4feac8c0',\n    'Content-Type': 'application/json'\n  }\n});\n","import React from 'react';\nimport Card from './Card';\nimport { api } from '../utils/api';\n\nfunction Main(props) {\n  const [userName, setUserName] = React.useState();\n  const [userDescription, setUserDescription] = React.useState();\n  const [userAvatar, setUserAvatar] = React.useState();\n  const [cards, setInitialCards] = React.useState([]);\n\n  React.useEffect(() => {\n    Promise.all([api.getInitCards(),api.getUserInfo()])\n    .then(([ cards, data ]) => {\n      const userId = data._id;\n\n      setUserName(data.name);\n      setUserDescription(data.about);\n      setUserAvatar(data.avatar);\n      setInitialCards(cards);\n\n      return userId\n    })\n    .catch(err => console.log(err))\n  }, []);\n\n  if (cards.length === 0) {\n    return (\n      <h1 className=\"profile__name\">Loading</h1>\n    )\n  }\n\n   return (\n    <main className=\"content\">\n      <section className=\"profile\">\n        <div className=\"profile__avatar-box\">\n          <img src={userAvatar} alt=\"Фото профиля\" className=\"profile__avatar button\" />\n          <button className=\"profile__avatar-btn button\" type=\"button\" onClick={props.onEditAvatar}></button>\n        </div>\n        <div className=\"profile__title\">\n          <div className=\"profile__heading\">\n            <h1 className=\"profile__name\">{userName}</h1>\n            <button className=\"profile__edit-btn button\" type=\"button\" onClick={props.onEditProfile}></button>\n          </div>\n          <p className=\"profile__desc\">{userDescription}</p>\n        </div>\n        <button className=\"profile__add-btn button\" type=\"button\" onClick={props.onAddPlace}></button>\n      </section>\n      <section className=\"places\">\n        <ul className=\"places__list\">\n          {cards.map((card) => (\n            <Card card={card}\n             key={card._id}\n             onCardClick={props.onCardClick}/>\n          ))}\n        </ul>\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n","import React from 'react';\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__copyright\">© 2020 Mesto Russia</p>\n    </footer>\n  )\n}\n\nexport default Footer;\n","import React from 'react';\n\nfunction PopupWithForm(props) {\n  return (\n    <section className={`modal modal_type_${props.name} ${props.isOpen ? 'modal_opened' : ''}`}>\n      <div className=\"modal__container\">\n        <h3 className=\"modal__title\">{props.title}</h3>\n        <form className=\"modal__form\" name={props.name} method=\"GET\" action=\"#\" noValidate>\n          {props.children}\n          <button className=\"modal__save-btn button\" type=\"submit\">Да</button>\n        </form>\n        <button className=\"modal__close-btn button\" type=\"button\" onClick={props.onClose}></button>\n      </div>\n    </section>\n  )\n}\n\nexport default PopupWithForm;\n","import React from 'react';\n\nfunction ImagePopup(props) {\n  return (\n    <section className={`modal modal_type_lightbox ${props.card.link ? 'modal_opened' : ''}`}>\n      <div className=\"modal__lightbox\">\n        <figure className=\"modal__figure\">\n          <img src={props.card.link} alt={props.card.link} className=\"modal__image\" />\n          <figcaption className=\"modal__caption\">{props.card.name}</figcaption>\n        </figure>\n        <button className=\"modal__close-btn button\" type=\"button\" onClick={props.onClose}></button>\n      </div>\n    </section>\n  )\n}\n\nexport default ImagePopup;\n","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\n\n\n\nfunction App() {\n  const [isEditProfilePopupOpen, setEditProfileClick] = React.useState(false);\n  const [isAddPlacePopupOpen, setAddPlaceClick] = React.useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarClick] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n\n  function handleEditProfileClick() {\n    setEditProfileClick(true);\n  };\n\n  function handleAddPlaceClick() {\n    setAddPlaceClick(true);\n  };\n\n  function handleEditAvatarClick() {\n    setEditAvatarClick(true);\n  };\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  };\n\n  function closeAllPopups() {\n    setEditProfileClick(false);\n    setAddPlaceClick(false);\n    setEditAvatarClick(false);\n    setSelectedCard({});\n  };\n\n  return (\n    <div className=\"page__content\">\n      <Header />\n      <Main\n      onEditProfile={handleEditProfileClick}\n      onAddPlace={handleAddPlaceClick}\n      onEditAvatar={handleEditAvatarClick}\n      onCardClick={handleCardClick}\n      />\n      <Footer />\n      <PopupWithForm title=\"Редактировать профиль\" name=\"title\" isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} />\n      <PopupWithForm title=\"Новое место\" name=\"place\" isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} />\n      <PopupWithForm title=\"Обновить аватар\" name=\"avatar\" isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} />\n      <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/header-logo.855a8c98.svg\";"],"sourceRoot":""}