{"version":3,"sources":["components/Header.js","components/Card.js","utils/utils.js","utils/api.js","components/Main.js","components/Footer.js","components/FormValidator.js","components/PopupWithForm.js","components/ImagePopup.js","components/ClosablePopup.js","components/App.js","serviceWorker.js","index.js","images/header-logo.svg"],"names":["Header","className","src","logo","alt","Card","props","onClick","onCardClick","card","link","name","type","likes","length","validateOptions","formSelector","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","errorClass","placeModal","avatarModal","api","baseUrl","headers","this","_baseUrl","_headers","res","ok","json","Promise","reject","status","fetch","then","_checkError","info","method","body","JSON","stringify","id","avatar","authorization","Main","React","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setInitialCards","useEffect","all","getInitCards","getUserInfo","data","about","catch","err","console","log","onEditAvatar","onEditProfile","onAddPlace","map","key","_id","Footer","FormValidator","form","options","inputList","buttonElement","_form","document","querySelector","_options","_inputList","_buttonElement","input","errorMessage","errorElement","classList","add","textContent","remove","validity","valid","_hideInputError","validationMessage","_showInputError","some","_hasInvalidInput","setAttribute","removeAttribute","value","_unfreezePlaceholder","_freezePlaceholder","_checkInputValidity","_toggleButtonState","_isEmpty","Array","from","querySelectorAll","forEach","addEventListener","_checkInput","contains","_setEventListeners","PopupWithForm","enableValidation","isOpen","title","action","noValidate","onSubmit","e","preventDefault","onClose","children","disabled","ImagePopup","ClosablePopup","rest","closeModalWithEsc","closeModalWithClick","target","removeEventListener","cloneElement","App","isEditProfilePopupOpen","setEditProfileClick","isAddPlacePopupOpen","setAddPlaceClick","isEditAvatarPopupOpen","setEditAvatarClick","selectedCard","setSelectedCard","closeAllPopups","required","minLength","maxLength","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.b315823f.chunk.js","sourcesContent":["import React from 'react';\nimport logo from '../images/header-logo.svg';\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <img src={logo} alt=\"Mesto логотип\" className=\"header__logo\" />\n    </header>\n  )\n}\n\nexport default Header;\n","import React from 'react';\n\nfunction Card(props) {\n  function handleClick() {\n    props.onCardClick(props.card);\n  };\n\n  return (\n    <li className=\"place\">\n      <div className=\"place__img-wrapper\" onClick={handleClick}>\n        <img src={props.card.link} alt={props.card.name} className=\"place__image\" />\n      </div>\n      <div className=\"place__header\">\n        <h3 className=\"place__title\">{props.card.name}</h3>\n        <div className=\"place__like\">\n          <button className=\"place__like-btn button\" type=\"button\"></button>\n          <span className=\"place__like-count\">{props.card.likes.length}</span>\n        </div>\n      </div>\n      <button className=\"place__delete-btn button\" type=\"button\"></button>\n    </li>\n  );\n}\n\nexport default Card;\n","export const validateOptions = {\n  formSelector: '.modal__form',\n  inputSelector: '.modal__input',\n  submitButtonSelector: '.modal__save-btn',\n  inactiveButtonClass: 'modal__save-btn_disabled',\n  inputErrorClass: 'modal__input_type_error',\n  errorClass: 'modal__input-error_active',\n  placeModal: 'modal_type_place',\n  avatarModal: 'modal_type_avatar'\n};\n\nexport const apiOptions = {\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-15',\n  headers: {\n    authorization: '793e9e42-5ad3-4803-88e8-acbb4feac8c0',\n    'Content-Type': 'application/json'\n  }\n};\n","import { apiOptions } from './utils';\n\nexport default class Api {\n  constructor({ baseUrl, headers }) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  _checkError(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Error: ${res.status}`)\n  }\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n      })\n      .then(this._checkError);\n  }\n\n  getInitCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n      })\n      .then(this._checkError);\n  }\n\n  patchUserInfo(info) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify(info)\n    })\n    .then(this._checkError);\n  }\n\n  addCard(card) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify(card)\n    })\n    .then(this._checkError);\n  }\n\n  deleteCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    })\n    .then(this._checkError);\n  }\n\n  putLike(id) {\n    return fetch(`${this._baseUrl}/cards/likes/${id}`, {\n      method: \"PUT\",\n      headers: this._headers\n      })\n      .then(this._checkError);\n  }\n\n  deleteLike(id) {\n    return fetch(`${this._baseUrl}/cards/likes/${id}`, {\n      method: \"DELETE\",\n      headers: this._headers\n      })\n      .then(this._checkError);\n  }\n\n  patchAvatar(avatar) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify(avatar)\n    })\n    .then(this._checkError);\n  }\n}\n\nexport const api = new Api(apiOptions);\n","import React from 'react';\nimport Card from './Card';\nimport { api } from '../utils/api';\n\nfunction Main(props) {\n  const [userName, setUserName] = React.useState();\n  const [userDescription, setUserDescription] = React.useState();\n  const [userAvatar, setUserAvatar] = React.useState();\n  const [cards, setInitialCards] = React.useState([]);\n\n  React.useEffect(() => {\n    Promise.all([api.getInitCards(),api.getUserInfo()])\n    .then(([ cards, data ]) => {\n      setUserName(data.name);\n      setUserDescription(data.about);\n      setUserAvatar(data.avatar);\n      setInitialCards(cards);\n    })\n    .catch(err => console.log(err))\n  }, []);\n\n  if (cards.length === 0) {\n    return (\n      <h1 className=\"profile__name\">Loading</h1>\n    )\n  }\n\n   return (\n    <main className=\"content\">\n      <section className=\"profile\">\n        <div className=\"profile__avatar-box\">\n          <img src={userAvatar} alt=\"Фото профиля\" className=\"profile__avatar button\" />\n          <button className=\"profile__avatar-btn button\" type=\"button\" onClick={props.onEditAvatar}></button>\n        </div>\n        <div className=\"profile__title\">\n          <div className=\"profile__heading\">\n            <h1 className=\"profile__name\">{userName}</h1>\n            <button className=\"profile__edit-btn button\" type=\"button\" onClick={props.onEditProfile}></button>\n          </div>\n          <p className=\"profile__desc\">{userDescription}</p>\n        </div>\n        <button className=\"profile__add-btn button\" type=\"button\" onClick={props.onAddPlace}></button>\n      </section>\n      <section className=\"places\">\n        <ul className=\"places__list\">\n          {cards.map((card) => (\n            <Card\n              card={card}\n              key={card._id}\n              onCardClick={props.onCardClick}\n              />\n          ))}\n        </ul>\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n","import React from 'react';\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__copyright\">© 2020 Mesto Russia</p>\n    </footer>\n  )\n}\n\nexport default Footer;\n","class FormValidator {\n  constructor(form, options, inputList, buttonElement) {\n    this._form = document.querySelector(form);\n    this._options = options;\n    this._inputList = inputList;\n    this._buttonElement = buttonElement;\n  }\n\n  _showInputError(input, errorMessage) {\n    const errorElement = this._form.querySelector(`#${input.id}-error`);\n    input.classList.add(this._options.inputErrorClass);\n    errorElement.textContent = errorMessage;\n    errorElement.classList.add(this._options.errorClass);\n  }\n\n  _hideInputError(input) {\n    const errorElement = this._form.querySelector(`#${input.id}-error`);\n    input.classList.remove(this._options.inputErrorClass);\n    errorElement.classList.remove(this._options.errorClass);\n    errorElement.textContent = '';\n  }\n\n  _checkInputValidity(input) {\n    if (!input.validity.valid) {\n      this._showInputError(input, input.validationMessage);\n    } else {\n      this._hideInputError(input, input.validationMessage);\n    }\n  }\n\n  _hasInvalidInput() {\n    return this._inputList.some((input) => {\n      return !input.validity.valid;\n    });\n  }\n\n  _toggleButtonState() {\n    if (this._hasInvalidInput(this._inputList)) {\n      this._buttonElement.setAttribute('disabled', true);\n      this._buttonElement.classList.add(this._options.inactiveButtonClass);\n    } else {\n      this._buttonElement.removeAttribute('disabled');\n      this._buttonElement.classList.remove(this._options.inactiveButtonClass);\n    }\n  }\n\n  _isEmpty(input) {\n    !input.value.length >= 1 ? this._unfreezePlaceholder(input) : this._freezePlaceholder(input);\n  }\n\n  _freezePlaceholder(input) {\n    const placeholderElement = this._form.querySelector(`#${input.id}-placeholder`);\n    placeholderElement.classList.add('modal__placeholder_is-fixed');\n  }\n\n  _unfreezePlaceholder(input) {\n    const placeholderElement = this._form.querySelector(`#${input.id}-placeholder`);\n    placeholderElement.classList.remove('modal__placeholder_is-fixed');\n  }\n\n  _checkInput(input) {\n    this._checkInputValidity(input);\n    this._toggleButtonState();\n    this._isEmpty(input);\n  }\n\n  _setEventListeners() {\n    this._inputList = Array.from(this._form.querySelectorAll(this._options.inputSelector));\n    this._buttonElement = this._form.querySelector(this._options.submitButtonSelector);\n\n    this._inputList.forEach((input) => {\n      input.addEventListener('input', () => {\n        this._checkInput(input);\n      });\n    });\n  }\n\n  resetError() {\n    this._inputList = Array.from(this._form.querySelectorAll(this._options.inputSelector));\n    this._buttonElement = this._form.querySelector(this._options.submitButtonSelector);\n\n    this._inputList.forEach((input) => {\n      if (this._form.classList.contains(this._options.placeModal) || this._form.classList.contains(this._options.avatarModal)) {\n        this._toggleButtonState();\n        this._hideInputError(input, input.validationMessage);\n        this._isEmpty(input);\n      } else {\n        this._checkInput(input);\n      }\n    });\n  }\n\n  enableValidation() {\n    this._setEventListeners();\n  }\n}\n\nexport default FormValidator;\n\n","import React from 'react';\nimport FormValidator from './FormValidator';\nimport { validateOptions } from '../utils/utils';\n\n\nfunction PopupWithForm(props) {\n  React.useEffect(() => {\n    const formValidator = new FormValidator(`.modal_type_${props.name}`, validateOptions);\n    formValidator.enableValidation();\n  }, [props.name]);\n\n  function submitHandler(e) {\n    e.preventDefault();\n    props.onClose();\n  };\n\n  return (\n    <section className={`modal modal_type_${props.name} ${props.isOpen ? 'modal_opened' : ''}`}>\n      <div className=\"modal__container\">\n        <h3 className=\"modal__title\">{props.title}</h3>\n        <form className=\"modal__form\" name={props.name} method=\"GET\" action=\"#\" noValidate onSubmit={submitHandler}>\n          {props.children}\n          <button className=\"modal__save-btn button modal__save-btn_disabled\" type=\"submit\" disabled>Сохранить</button>\n        </form>\n        <button className=\"modal__close-btn button\" type=\"button\" onClick={props.onClose}></button>\n      </div>\n    </section>\n  );\n}\n\nexport default PopupWithForm;\n","import React from 'react';\n\nfunction ImagePopup(props) {\n  return (\n    <section className={`modal modal_type_lightbox ${props.card.link ? 'modal_opened' : ''}`}>\n      <div className=\"modal__lightbox\">\n        <figure className=\"modal__figure\">\n          <img src={props.card.link} alt={props.card.link} className=\"modal__image\" />\n          <figcaption className=\"modal__caption\">{props.card.name}</figcaption>\n        </figure>\n        <button className=\"modal__close-btn button\" type=\"button\" onClick={props.onClose}></button>\n      </div>\n    </section>\n  );\n}\n\nexport default ImagePopup;\n","import React from 'react';\n\nfunction ClosablePopup(props) {\n  const {children, ...rest} = props;\n\n  React.useEffect(() => {\n    function closeModalWithEsc(e) {\n      if (e.key === \"Escape\") {\n        children.props.onClose();\n      }\n    };\n\n    function closeModalWithClick(e) {\n      if (e.target.classList.contains('modal')) {\n        children.props.onClose();\n      }\n    };\n\n    document.addEventListener('mousedown', closeModalWithClick);\n    document.addEventListener('keydown', closeModalWithEsc);\n\n    return () => {\n      document.removeEventListener('mousedown', closeModalWithClick);\n      document.removeEventListener('keydown', closeModalWithEsc);\n    };\n  }, [children]);\n\n  return (\n    <>\n    {React.cloneElement(children, {...rest})}\n    </>\n  );\n}\n\nexport default ClosablePopup;\n","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport ClosablePopup from './ClosablePopup';\n\nfunction App() {\n  const [isEditProfilePopupOpen, setEditProfileClick] = React.useState(false);\n  const [isAddPlacePopupOpen, setAddPlaceClick] = React.useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarClick] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n\n  function handleEditProfileClick() {\n    setEditProfileClick(true);\n  };\n\n  function handleAddPlaceClick() {\n    setAddPlaceClick(true);\n  };\n\n  function handleEditAvatarClick() {\n    setEditAvatarClick(true);\n  };\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  };\n\n  function closeAllPopups() {\n    setEditProfileClick(false);\n    setAddPlaceClick(false);\n    setEditAvatarClick(false);\n    setSelectedCard({});\n  };\n\n  return (\n    <div className=\"page__content\">\n      <Header />\n      <Main\n        onEditProfile={handleEditProfileClick}\n        onAddPlace={handleAddPlaceClick}\n        onEditAvatar={handleEditAvatarClick}\n        onCardClick={handleCardClick}\n      />\n      <Footer />\n      {isEditProfilePopupOpen ?\n        <ClosablePopup>\n          <PopupWithForm\n            title=\"Редактировать профиль\"\n            name=\"title\"\n            isOpen={isEditProfilePopupOpen}\n            onClose={closeAllPopups}\n            children={(\n              <fieldset className=\"modal__fields\">\n                <label className=\"modal__field\">\n                  <input type=\"text\" className=\"modal__input\" name=\"nickname\" id=\"name-input\" required minLength=\"2\" maxLength=\"40\" />\n                  <span className=\"modal__placeholder\" id=\"name-input-placeholder\">Имя</span>\n                  <span id=\"name-input-error\" className=\"modal__input-error\"></span>\n                </label>\n                <label className=\"modal__field\">\n                  <input type=\"text\" className=\"modal__input\" name=\"desc\" id=\"desc-input\" required minLength=\"2\" maxLength=\"200\" />\n                  <span className=\"modal__placeholder\" id=\"desc-input-placeholder\">О себе</span>\n                  <span id=\"desc-input-error\" className=\"modal__input-error\"></span>\n                </label>\n              </fieldset>\n            )}\n          />\n        </ClosablePopup>\n      : ''}\n      {isAddPlacePopupOpen ?\n        <ClosablePopup>\n          <PopupWithForm\n            title=\"Новое место\"\n            name=\"place\"\n            isOpen={isAddPlacePopupOpen}\n            onClose={closeAllPopups}\n            children={(\n              <fieldset className=\"modal__fields\">\n                <label className=\"modal__field\">\n                  <input type=\"text\" className=\"modal__input\" name=\"name\" id=\"place-input\" required minLength=\"2\" maxLength=\"30\" />\n                  <span className=\"modal__placeholder\" id=\"place-input-placeholder\">Название</span>\n                  <span id=\"place-input-error\" className=\"modal__input-error\"></span>\n                </label>\n                <label className=\"modal__field\">\n                  <input type=\"url\" className=\"modal__input\" name=\"link\" id=\"link-input\" required />\n                  <span className=\"modal__placeholder\" id=\"link-input-placeholder\">Ссылка на картинку</span>\n                  <span id=\"link-input-error\" className=\"modal__input-error\"></span>\n                </label>\n              </fieldset>\n            )}\n          />\n        </ClosablePopup>\n      : ''}\n      {isEditAvatarPopupOpen ?\n        <ClosablePopup>\n          <PopupWithForm\n            title=\"Обновить аватар\"\n            name=\"avatar\"\n            isOpen={isEditAvatarPopupOpen}\n            onClose={closeAllPopups}\n            children={(\n              <label className=\"modal__field\">\n                <input type=\"url\" className=\"modal__input\" name=\"avatar\" id=\"avatar-input\" required />\n                <span className=\"modal__placeholder\" id=\"avatar-input-placeholder\">Ссылка на аватар</span>\n                <span id=\"avatar-input-error\" className=\"modal__input-error\"></span>\n              </label>\n              )}\n            />\n        </ClosablePopup>\n      : ''}\n      {selectedCard.link ?\n      <ClosablePopup>\n        <ImagePopup\n          card={selectedCard}\n          onClose={closeAllPopups}\n        />\n        </ClosablePopup>\n      : ''}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/header-logo.855a8c98.svg\";"],"sourceRoot":""}